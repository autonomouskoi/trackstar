// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: trackstar.proto

package trackstar

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BusTopic int32

const (
	BusTopic_TRACKSTAR_EVENT   BusTopic = 0
	BusTopic_TRACKSTAR_REQUEST BusTopic = 1
	BusTopic_TRACKSTAR_COMMAND BusTopic = 2
)

// Enum value maps for BusTopic.
var (
	BusTopic_name = map[int32]string{
		0: "TRACKSTAR_EVENT",
		1: "TRACKSTAR_REQUEST",
		2: "TRACKSTAR_COMMAND",
	}
	BusTopic_value = map[string]int32{
		"TRACKSTAR_EVENT":   0,
		"TRACKSTAR_REQUEST": 1,
		"TRACKSTAR_COMMAND": 2,
	}
)

func (x BusTopic) Enum() *BusTopic {
	p := new(BusTopic)
	*p = x
	return p
}

func (x BusTopic) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BusTopic) Descriptor() protoreflect.EnumDescriptor {
	return file_trackstar_proto_enumTypes[0].Descriptor()
}

func (BusTopic) Type() protoreflect.EnumType {
	return &file_trackstar_proto_enumTypes[0]
}

func (x BusTopic) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BusTopic.Descriptor instead.
func (BusTopic) EnumDescriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{0}
}

type MessageTypeEvent int32

const (
	MessageTypeEvent_TRACKSTAR_EVENT_UNSPECIFIED       MessageTypeEvent = 0
	MessageTypeEvent_TRACKSTAR_EVENT_DECK_DISCOVERED   MessageTypeEvent = 1
	MessageTypeEvent_TRACKSTAR_EVENT_TRACK_UPDATE      MessageTypeEvent = 2
	MessageTypeEvent_TRACKSTAR_EVENT_DECK_STYLE_UPDATE MessageTypeEvent = 3
)

// Enum value maps for MessageTypeEvent.
var (
	MessageTypeEvent_name = map[int32]string{
		0: "TRACKSTAR_EVENT_UNSPECIFIED",
		1: "TRACKSTAR_EVENT_DECK_DISCOVERED",
		2: "TRACKSTAR_EVENT_TRACK_UPDATE",
		3: "TRACKSTAR_EVENT_DECK_STYLE_UPDATE",
	}
	MessageTypeEvent_value = map[string]int32{
		"TRACKSTAR_EVENT_UNSPECIFIED":       0,
		"TRACKSTAR_EVENT_DECK_DISCOVERED":   1,
		"TRACKSTAR_EVENT_TRACK_UPDATE":      2,
		"TRACKSTAR_EVENT_DECK_STYLE_UPDATE": 3,
	}
)

func (x MessageTypeEvent) Enum() *MessageTypeEvent {
	p := new(MessageTypeEvent)
	*p = x
	return p
}

func (x MessageTypeEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageTypeEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_trackstar_proto_enumTypes[1].Descriptor()
}

func (MessageTypeEvent) Type() protoreflect.EnumType {
	return &file_trackstar_proto_enumTypes[1]
}

func (x MessageTypeEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageTypeEvent.Descriptor instead.
func (MessageTypeEvent) EnumDescriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{1}
}

type MessageTypeRequest int32

const (
	MessageTypeRequest_TRACKSTAR_REQUEST_GET_TRACK_REQ  MessageTypeRequest = 0
	MessageTypeRequest_TRACKSTAR_REQUEST_GET_TRACK_RESP MessageTypeRequest = 1
	MessageTypeRequest_SUBMIT_TRACK_REQ                 MessageTypeRequest = 2
	MessageTypeRequest_SUBMIT_TRACK_RESP                MessageTypeRequest = 3
	MessageTypeRequest_CONFIG_GET_REQ                   MessageTypeRequest = 4
	MessageTypeRequest_CONFIG_GET_RESP                  MessageTypeRequest = 5
	MessageTypeRequest_GET_ALL_TRACKS_REQ               MessageTypeRequest = 6
	MessageTypeRequest_GET_ALL_TRACKS_RESP              MessageTypeRequest = 7
)

// Enum value maps for MessageTypeRequest.
var (
	MessageTypeRequest_name = map[int32]string{
		0: "TRACKSTAR_REQUEST_GET_TRACK_REQ",
		1: "TRACKSTAR_REQUEST_GET_TRACK_RESP",
		2: "SUBMIT_TRACK_REQ",
		3: "SUBMIT_TRACK_RESP",
		4: "CONFIG_GET_REQ",
		5: "CONFIG_GET_RESP",
		6: "GET_ALL_TRACKS_REQ",
		7: "GET_ALL_TRACKS_RESP",
	}
	MessageTypeRequest_value = map[string]int32{
		"TRACKSTAR_REQUEST_GET_TRACK_REQ":  0,
		"TRACKSTAR_REQUEST_GET_TRACK_RESP": 1,
		"SUBMIT_TRACK_REQ":                 2,
		"SUBMIT_TRACK_RESP":                3,
		"CONFIG_GET_REQ":                   4,
		"CONFIG_GET_RESP":                  5,
		"GET_ALL_TRACKS_REQ":               6,
		"GET_ALL_TRACKS_RESP":              7,
	}
)

func (x MessageTypeRequest) Enum() *MessageTypeRequest {
	p := new(MessageTypeRequest)
	*p = x
	return p
}

func (x MessageTypeRequest) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageTypeRequest) Descriptor() protoreflect.EnumDescriptor {
	return file_trackstar_proto_enumTypes[2].Descriptor()
}

func (MessageTypeRequest) Type() protoreflect.EnumType {
	return &file_trackstar_proto_enumTypes[2]
}

func (x MessageTypeRequest) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageTypeRequest.Descriptor instead.
func (MessageTypeRequest) EnumDescriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{2}
}

type MessageTypeCommand int32

const (
	MessageTypeCommand_CONFIG_SET_REQ  MessageTypeCommand = 0
	MessageTypeCommand_CONFIG_SET_RESP MessageTypeCommand = 1
)

// Enum value maps for MessageTypeCommand.
var (
	MessageTypeCommand_name = map[int32]string{
		0: "CONFIG_SET_REQ",
		1: "CONFIG_SET_RESP",
	}
	MessageTypeCommand_value = map[string]int32{
		"CONFIG_SET_REQ":  0,
		"CONFIG_SET_RESP": 1,
	}
)

func (x MessageTypeCommand) Enum() *MessageTypeCommand {
	p := new(MessageTypeCommand)
	*p = x
	return p
}

func (x MessageTypeCommand) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageTypeCommand) Descriptor() protoreflect.EnumDescriptor {
	return file_trackstar_proto_enumTypes[3].Descriptor()
}

func (MessageTypeCommand) Type() protoreflect.EnumType {
	return &file_trackstar_proto_enumTypes[3]
}

func (x MessageTypeCommand) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageTypeCommand.Descriptor instead.
func (MessageTypeCommand) EnumDescriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{3}
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DemoDelaySeconds   uint32            `protobuf:"varint,1,opt,name=demo_delay_seconds,json=demoDelaySeconds,proto3" json:"demo_delay_seconds,omitempty"`
	ClearBracketedText bool              `protobuf:"varint,2,opt,name=clear_bracketed_text,json=clearBracketedText,proto3" json:"clear_bracketed_text,omitempty"`
	TrackDelaySeconds  uint32            `protobuf:"varint,3,opt,name=track_delay_seconds,json=trackDelaySeconds,proto3" json:"track_delay_seconds,omitempty"`
	TrackReplacements  map[string]*Track `protobuf:"bytes,4,rep,name=track_replacements,json=trackReplacements,proto3" json:"track_replacements,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trackstar_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_trackstar_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetDemoDelaySeconds() uint32 {
	if x != nil {
		return x.DemoDelaySeconds
	}
	return 0
}

func (x *Config) GetClearBracketedText() bool {
	if x != nil {
		return x.ClearBracketedText
	}
	return false
}

func (x *Config) GetTrackDelaySeconds() uint32 {
	if x != nil {
		return x.TrackDelaySeconds
	}
	return 0
}

func (x *Config) GetTrackReplacements() map[string]*Track {
	if x != nil {
		return x.TrackReplacements
	}
	return nil
}

type DeckDiscovered struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeckId string `protobuf:"bytes,1,opt,name=deck_id,json=deckId,proto3" json:"deck_id,omitempty"`
}

func (x *DeckDiscovered) Reset() {
	*x = DeckDiscovered{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trackstar_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeckDiscovered) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeckDiscovered) ProtoMessage() {}

func (x *DeckDiscovered) ProtoReflect() protoreflect.Message {
	mi := &file_trackstar_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeckDiscovered.ProtoReflect.Descriptor instead.
func (*DeckDiscovered) Descriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{1}
}

func (x *DeckDiscovered) GetDeckId() string {
	if x != nil {
		return x.DeckId
	}
	return ""
}

type TrackUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeckId string `protobuf:"bytes,1,opt,name=deck_id,json=deckId,proto3" json:"deck_id,omitempty"`
	Track  *Track `protobuf:"bytes,2,opt,name=track,proto3" json:"track,omitempty"`
	When   int64  `protobuf:"varint,3,opt,name=when,proto3" json:"when,omitempty"`
}

func (x *TrackUpdate) Reset() {
	*x = TrackUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trackstar_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackUpdate) ProtoMessage() {}

func (x *TrackUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_trackstar_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackUpdate.ProtoReflect.Descriptor instead.
func (*TrackUpdate) Descriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{2}
}

func (x *TrackUpdate) GetDeckId() string {
	if x != nil {
		return x.DeckId
	}
	return ""
}

func (x *TrackUpdate) GetTrack() *Track {
	if x != nil {
		return x.Track
	}
	return nil
}

func (x *TrackUpdate) GetWhen() int64 {
	if x != nil {
		return x.When
	}
	return 0
}

type Track struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artist string `protobuf:"bytes,1,opt,name=artist,proto3" json:"artist,omitempty"`
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Track) Reset() {
	*x = Track{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trackstar_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Track) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Track) ProtoMessage() {}

func (x *Track) ProtoReflect() protoreflect.Message {
	mi := &file_trackstar_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Track.ProtoReflect.Descriptor instead.
func (*Track) Descriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{3}
}

func (x *Track) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *Track) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type GetTrackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeltaSeconds uint32 `protobuf:"varint,1,opt,name=delta_seconds,json=deltaSeconds,proto3" json:"delta_seconds,omitempty"`
}

func (x *GetTrackRequest) Reset() {
	*x = GetTrackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trackstar_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackRequest) ProtoMessage() {}

func (x *GetTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trackstar_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackRequest.ProtoReflect.Descriptor instead.
func (*GetTrackRequest) Descriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{4}
}

func (x *GetTrackRequest) GetDeltaSeconds() uint32 {
	if x != nil {
		return x.DeltaSeconds
	}
	return 0
}

type GetTrackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackUpdate *TrackUpdate `protobuf:"bytes,1,opt,name=track_update,json=trackUpdate,proto3" json:"track_update,omitempty"`
}

func (x *GetTrackResponse) Reset() {
	*x = GetTrackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trackstar_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackResponse) ProtoMessage() {}

func (x *GetTrackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trackstar_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackResponse.ProtoReflect.Descriptor instead.
func (*GetTrackResponse) Descriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{5}
}

func (x *GetTrackResponse) GetTrackUpdate() *TrackUpdate {
	if x != nil {
		return x.TrackUpdate
	}
	return nil
}

type GetAllTracksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllTracksRequest) Reset() {
	*x = GetAllTracksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trackstar_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTracksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTracksRequest) ProtoMessage() {}

func (x *GetAllTracksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trackstar_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTracksRequest.ProtoReflect.Descriptor instead.
func (*GetAllTracksRequest) Descriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{6}
}

type GetAllTracksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tracks []*TrackUpdate `protobuf:"bytes,1,rep,name=tracks,proto3" json:"tracks,omitempty"`
}

func (x *GetAllTracksResponse) Reset() {
	*x = GetAllTracksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trackstar_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTracksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTracksResponse) ProtoMessage() {}

func (x *GetAllTracksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trackstar_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTracksResponse.ProtoReflect.Descriptor instead.
func (*GetAllTracksResponse) Descriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{7}
}

func (x *GetAllTracksResponse) GetTracks() []*TrackUpdate {
	if x != nil {
		return x.Tracks
	}
	return nil
}

type SubmitTrackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackUpdate *TrackUpdate `protobuf:"bytes,1,opt,name=track_update,json=trackUpdate,proto3" json:"track_update,omitempty"`
}

func (x *SubmitTrackRequest) Reset() {
	*x = SubmitTrackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trackstar_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTrackRequest) ProtoMessage() {}

func (x *SubmitTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trackstar_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTrackRequest.ProtoReflect.Descriptor instead.
func (*SubmitTrackRequest) Descriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{8}
}

func (x *SubmitTrackRequest) GetTrackUpdate() *TrackUpdate {
	if x != nil {
		return x.TrackUpdate
	}
	return nil
}

type SubmitTrackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubmitTrackResponse) Reset() {
	*x = SubmitTrackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trackstar_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTrackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTrackResponse) ProtoMessage() {}

func (x *SubmitTrackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trackstar_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTrackResponse.ProtoReflect.Descriptor instead.
func (*SubmitTrackResponse) Descriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{9}
}

type ConfigGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigGetRequest) Reset() {
	*x = ConfigGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trackstar_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetRequest) ProtoMessage() {}

func (x *ConfigGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trackstar_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetRequest.ProtoReflect.Descriptor instead.
func (*ConfigGetRequest) Descriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{10}
}

type ConfigGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *Config `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ConfigGetResponse) Reset() {
	*x = ConfigGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trackstar_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetResponse) ProtoMessage() {}

func (x *ConfigGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trackstar_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetResponse.ProtoReflect.Descriptor instead.
func (*ConfigGetResponse) Descriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{11}
}

func (x *ConfigGetResponse) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type ConfigSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *Config `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ConfigSetRequest) Reset() {
	*x = ConfigSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trackstar_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSetRequest) ProtoMessage() {}

func (x *ConfigSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trackstar_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSetRequest.ProtoReflect.Descriptor instead.
func (*ConfigSetRequest) Descriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{12}
}

func (x *ConfigSetRequest) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type ConfigSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *Config `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ConfigSetResponse) Reset() {
	*x = ConfigSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trackstar_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSetResponse) ProtoMessage() {}

func (x *ConfigSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trackstar_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSetResponse.ProtoReflect.Descriptor instead.
func (*ConfigSetResponse) Descriptor() ([]byte, []int) {
	return file_trackstar_proto_rawDescGZIP(), []int{13}
}

func (x *ConfigSetResponse) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

var File_trackstar_proto protoreflect.FileDescriptor

var file_trackstar_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x74, 0x61, 0x72, 0x22, 0xc9, 0x02, 0x0a,
	0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65, 0x6d, 0x6f, 0x5f,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x64, 0x65, 0x6d, 0x6f, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x62,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x42, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x57, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x5f, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x74, 0x61, 0x72, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0x56, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x29, 0x0a, 0x0e, 0x44, 0x65, 0x63, 0x6b,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65,
	0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x63,
	0x6b, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x05, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x22, 0x35, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x36,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x4d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x74, 0x61, 0x72,
	0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x06, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x73, 0x22, 0x4f, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x74, 0x61, 0x72, 0x2e, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x3e, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x74, 0x61,
	0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x22, 0x3d, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x74, 0x61, 0x72,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x3e, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x74, 0x61, 0x72,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2a,
	0x4d, 0x0a, 0x08, 0x42, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x13, 0x0a, 0x0f, 0x54,
	0x52, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x52, 0x41, 0x43, 0x4b,
	0x53, 0x54, 0x41, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x02, 0x2a, 0xa1,
	0x01, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x41, 0x52,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x41,
	0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x43, 0x4b, 0x5f, 0x44, 0x49, 0x53,
	0x43, 0x4f, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x54, 0x52, 0x41,
	0x43, 0x4b, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x52, 0x41,
	0x43, 0x4b, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x54,
	0x52, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44,
	0x45, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x10, 0x03, 0x2a, 0xe6, 0x01, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x1f, 0x54, 0x52, 0x41,
	0x43, 0x4b, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x47,
	0x45, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x00, 0x12, 0x24,
	0x0a, 0x20, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x5f, 0x52, 0x45,
	0x53, 0x50, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x5f, 0x54,
	0x52, 0x41, 0x43, 0x4b, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x55,
	0x42, 0x4d, 0x49, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x10,
	0x03, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x47, 0x45, 0x54, 0x5f,
	0x52, 0x45, 0x51, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f,
	0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x45,
	0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x5f, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x53, 0x5f, 0x52, 0x45, 0x51,
	0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x45, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x5f, 0x54, 0x52,
	0x41, 0x43, 0x4b, 0x53, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x10, 0x07, 0x2a, 0x3d, 0x0a, 0x12, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x53, 0x45, 0x54, 0x5f,
	0x52, 0x45, 0x51, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f,
	0x53, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x10, 0x01, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d,
	0x6f, 0x75, 0x73, 0x6b, 0x6f, 0x69, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x74, 0x61, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trackstar_proto_rawDescOnce sync.Once
	file_trackstar_proto_rawDescData = file_trackstar_proto_rawDesc
)

func file_trackstar_proto_rawDescGZIP() []byte {
	file_trackstar_proto_rawDescOnce.Do(func() {
		file_trackstar_proto_rawDescData = protoimpl.X.CompressGZIP(file_trackstar_proto_rawDescData)
	})
	return file_trackstar_proto_rawDescData
}

var file_trackstar_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_trackstar_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_trackstar_proto_goTypes = []any{
	(BusTopic)(0),                // 0: trackstar.BusTopic
	(MessageTypeEvent)(0),        // 1: trackstar.MessageTypeEvent
	(MessageTypeRequest)(0),      // 2: trackstar.MessageTypeRequest
	(MessageTypeCommand)(0),      // 3: trackstar.MessageTypeCommand
	(*Config)(nil),               // 4: trackstar.Config
	(*DeckDiscovered)(nil),       // 5: trackstar.DeckDiscovered
	(*TrackUpdate)(nil),          // 6: trackstar.TrackUpdate
	(*Track)(nil),                // 7: trackstar.Track
	(*GetTrackRequest)(nil),      // 8: trackstar.GetTrackRequest
	(*GetTrackResponse)(nil),     // 9: trackstar.GetTrackResponse
	(*GetAllTracksRequest)(nil),  // 10: trackstar.GetAllTracksRequest
	(*GetAllTracksResponse)(nil), // 11: trackstar.GetAllTracksResponse
	(*SubmitTrackRequest)(nil),   // 12: trackstar.SubmitTrackRequest
	(*SubmitTrackResponse)(nil),  // 13: trackstar.SubmitTrackResponse
	(*ConfigGetRequest)(nil),     // 14: trackstar.ConfigGetRequest
	(*ConfigGetResponse)(nil),    // 15: trackstar.ConfigGetResponse
	(*ConfigSetRequest)(nil),     // 16: trackstar.ConfigSetRequest
	(*ConfigSetResponse)(nil),    // 17: trackstar.ConfigSetResponse
	nil,                          // 18: trackstar.Config.TrackReplacementsEntry
}
var file_trackstar_proto_depIdxs = []int32{
	18, // 0: trackstar.Config.track_replacements:type_name -> trackstar.Config.TrackReplacementsEntry
	7,  // 1: trackstar.TrackUpdate.track:type_name -> trackstar.Track
	6,  // 2: trackstar.GetTrackResponse.track_update:type_name -> trackstar.TrackUpdate
	6,  // 3: trackstar.GetAllTracksResponse.tracks:type_name -> trackstar.TrackUpdate
	6,  // 4: trackstar.SubmitTrackRequest.track_update:type_name -> trackstar.TrackUpdate
	4,  // 5: trackstar.ConfigGetResponse.config:type_name -> trackstar.Config
	4,  // 6: trackstar.ConfigSetRequest.config:type_name -> trackstar.Config
	4,  // 7: trackstar.ConfigSetResponse.config:type_name -> trackstar.Config
	7,  // 8: trackstar.Config.TrackReplacementsEntry.value:type_name -> trackstar.Track
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_trackstar_proto_init() }
func file_trackstar_proto_init() {
	if File_trackstar_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_trackstar_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trackstar_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DeckDiscovered); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trackstar_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TrackUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trackstar_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Track); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trackstar_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetTrackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trackstar_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetTrackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trackstar_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllTracksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trackstar_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllTracksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trackstar_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SubmitTrackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trackstar_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SubmitTrackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trackstar_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ConfigGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trackstar_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ConfigGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trackstar_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ConfigSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trackstar_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ConfigSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trackstar_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_trackstar_proto_goTypes,
		DependencyIndexes: file_trackstar_proto_depIdxs,
		EnumInfos:         file_trackstar_proto_enumTypes,
		MessageInfos:      file_trackstar_proto_msgTypes,
	}.Build()
	File_trackstar_proto = out.File
	file_trackstar_proto_rawDesc = nil
	file_trackstar_proto_goTypes = nil
	file_trackstar_proto_depIdxs = nil
}
